name: Build Release

on:
  push:
    tags:
      - '*'

jobs:
  build-release:
    name: Build and Upload a release
    runs-on: macos-latest
    steps:
      - name: Pull Source
        uses: actions/checkout@v2

      - name: Create ENV
        run: |
          echo "::set-env name=REPO::$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2-)"
          echo "::set-env name=VER::$(echo $GITHUB_REF | cut -d '/' -f 3-)"
        
      - name: Build
        env:
          ENC_PASSWORD: ${{ secrets.ENC_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          PROFILE_PASSWORD: ${{ secrets.PROFILE_PASSWORD }}
        run: |
          ./scripts/install-provisioning-profiles
          npm install
          xcodebuild -scheme Montclair -workspace platforms/ios/Montclair.xcworkspace -allowProvisioningUpdates -destination generic/platform=iOS build
          xcodebuild -scheme Montclair -workspace platforms/ios/Montclair.xcworkspace -allowProvisioningUpdates -sdk iphoneos -configuration AppStoreDistribution archive -archivePath $PWD/build/Montclair.xcarchive
          xcodebuild -exportArchive -allowProvisioningUpdates -archivePath ${PWD}/build/Montclair.xcarchive/ -exportOptionsPlist exportOptions.plist -exportPath $PWD/build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VER }}
          release_name: Release ${{ env.VER }}
          draft: false
          prerelease: false
          
      - name: Upload release
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Montclair.ipa
          asset_name: ${{ env.REPO }}-${{ env.VER }}.ipa
          asset_content_type: application/zip
